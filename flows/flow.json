[
    {
        "id": "55f1d718.b788a8",
        "type": "comment",
        "z": "74eba602.6446d",
        "name": "REST endpoint (GET) - Request followers list",
        "info": "",
        "x": 270,
        "y": 220,
        "wires": []
    },
    {
        "id": "e0d90993.27c44",
        "type": "http in",
        "z": "74eba602.6446d",
        "name": "/getToken",
        "url": "/getToken",
        "method": "get",
        "upload": false,
        "swaggerDoc": "",
        "x": 160,
        "y": 140,
        "wires": [
            [
                "ab4dafb7.2e0b9",
                "1b538e36.0eda12"
            ]
        ]
    },
    {
        "id": "40b26ed3.a8055",
        "type": "http request",
        "z": "74eba602.6446d",
        "name": "Request bearer token",
        "method": "POST",
        "ret": "txt",
        "paytoqs": false,
        "url": "https://api.twitter.com/oauth2/token",
        "tls": "",
        "persist": false,
        "proxy": "",
        "authType": "",
        "x": 860,
        "y": 120,
        "wires": [
            [
                "524852f0.ac63ac"
            ]
        ]
    },
    {
        "id": "ab4dafb7.2e0b9",
        "type": "function",
        "z": "74eba602.6446d",
        "name": "set header with bearer token",
        "func": "// validate the request user and password\nif ( msg.payload.nodereduser === flow.get(\"nodereduser\") && msg.payload.noderedpassword === flow.get(\"noderedpassword\")){\n  \n  msg.headers = {\n     'Authorization' : 'Basic ' + flow.get(\"auth\"),\n     'Content-Type' : 'application/x-www-form-urlencoded;charset=UTF-8.'\n  };\n  \n  msg.payload = 'grant_type=client_credentials';\n  msg.valid_request = 1;\n  \n} else {\n  msg.valid_request = 0;\n}\n  \nreturn msg;\n\n\n",
        "outputs": 1,
        "noerr": 0,
        "x": 380,
        "y": 140,
        "wires": [
            [
                "3fa0044.d739e7c"
            ]
        ]
    },
    {
        "id": "524852f0.ac63ac",
        "type": "http response",
        "z": "74eba602.6446d",
        "name": "Token response",
        "statusCode": "",
        "headers": {},
        "x": 1160,
        "y": 140,
        "wires": []
    },
    {
        "id": "ccfe3ea8.e3c03",
        "type": "comment",
        "z": "74eba602.6446d",
        "name": "REST endpoint (POST) - Request a bearer token from Twitter",
        "info": "",
        "x": 320,
        "y": 80,
        "wires": []
    },
    {
        "id": "353a2edf.70e42a",
        "type": "http request",
        "z": "74eba602.6446d",
        "name": "Request twitter follower list",
        "method": "GET",
        "ret": "txt",
        "paytoqs": false,
        "url": "https://api.twitter.com/1.1/followers/list.json?screen_name={{{twitterSN}}}&cursor={{{twitterCursor}}}&count={{{twitterCount}}}",
        "tls": "",
        "persist": false,
        "proxy": "",
        "authType": "",
        "x": 880,
        "y": 260,
        "wires": [
            [
                "8ecb7347.fe94c8"
            ]
        ]
    },
    {
        "id": "8ecb7347.fe94c8",
        "type": "http response",
        "z": "74eba602.6446d",
        "name": "Twitter follower list response",
        "statusCode": "",
        "headers": {},
        "x": 1200,
        "y": 280,
        "wires": []
    },
    {
        "id": "a20e9d84.a8f22",
        "type": "function",
        "z": "74eba602.6446d",
        "name": "set bearer auth headers and parameters",
        "func": "// validate the request user and password\nif ( msg.payload.nodereduser === flow.get(\"nodereduser\") && msg.payload.noderedpassword === flow.get(\"noderedpassword\")){\n \n    // Get variables\n    bearer_token = flow.get(\"bearer_token\");\n     \n    msg.headers = {\n         'Authorization' : bearer_token\n    }\n    \n    // Get query parameter\n    msg.twitterSN =  msg.req.query.screen_name;\n    msg.twitterCursor =  msg.req.query.cursor;\n    msg.twitterCount =  msg.req.query.count;\n    \n    msg.valid_request = 1;\n  \n} else {\n    msg.valid_request = 0;\n}\n  \nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 420,
        "y": 280,
        "wires": [
            [
                "863f0ed1.9952e"
            ]
        ]
    },
    {
        "id": "6ed435d4.6c7ffc",
        "type": "http in",
        "z": "74eba602.6446d",
        "name": "/followers",
        "url": "/followers",
        "method": "get",
        "upload": false,
        "swaggerDoc": "",
        "x": 160,
        "y": 280,
        "wires": [
            [
                "a20e9d84.a8f22"
            ]
        ]
    },
    {
        "id": "913c81cb.40976",
        "type": "http request",
        "z": "74eba602.6446d",
        "name": "getTwitterToken-Indicrect",
        "method": "GET",
        "ret": "txt",
        "paytoqs": false,
        "url": "https://node-red-my-hackathon.mybluemix.net/getToken?nodereduser={{{nodereduser}}}&noderedpassword={{{noderedpassword}}}",
        "tls": "",
        "persist": false,
        "proxy": "",
        "authType": "",
        "x": 210,
        "y": 680,
        "wires": [
            [
                "9aed0ab6.f54e78"
            ]
        ]
    },
    {
        "id": "66727eea.a6d578",
        "type": "debug",
        "z": "74eba602.6446d",
        "name": "Twitter Bearer token",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "x": 1040,
        "y": 780,
        "wires": []
    },
    {
        "id": "a991a881.d91be8",
        "type": "base64",
        "z": "74eba602.6446d",
        "name": "",
        "action": "str",
        "property": "payload",
        "x": 420,
        "y": 620,
        "wires": [
            [
                "e0c7616e.50858"
            ]
        ]
    },
    {
        "id": "551c053a.d9400c",
        "type": "inject",
        "z": "74eba602.6446d",
        "name": "start get follower list",
        "topic": "",
        "payload": "",
        "payloadType": "str",
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "x": 130,
        "y": 460,
        "wires": [
            [
                "56b42a38.cd9c64"
            ]
        ]
    },
    {
        "id": "ab752410.03e078",
        "type": "debug",
        "z": "74eba602.6446d",
        "name": "Encoded Access token",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "x": 1050,
        "y": 620,
        "wires": []
    },
    {
        "id": "ca786e7e.45c1a8",
        "type": "http request",
        "z": "74eba602.6446d",
        "name": "getTwitterFollower-Indicrect",
        "method": "GET",
        "ret": "txt",
        "paytoqs": false,
        "url": "https://node-red-my-hackathon.mybluemix.net/followers?screen_name={{{twitterSN}}}&count={{{twitterCount}}}&cursor={{{twitterCursor}}}&nodereduser={{{nodereduser}}}&noderedpassword={{{noderedpassword}}}",
        "tls": "",
        "persist": false,
        "proxy": "",
        "authType": "",
        "x": 1060,
        "y": 840,
        "wires": [
            [
                "90337eed.56771"
            ]
        ]
    },
    {
        "id": "acf23bc2.b325a8",
        "type": "debug",
        "z": "74eba602.6446d",
        "name": "move on?",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "x": 840,
        "y": 1060,
        "wires": []
    },
    {
        "id": "a470e4ba.e78688",
        "type": "function",
        "z": "74eba602.6446d",
        "name": "set twitter user and page cursor",
        "func": "// Set the tweeter request query parameter before the loop\n\n// Data is used in the REST request \n// (Issue Twitter API REST Request (GET))\n// -----------------------------------------------------------------------\n// https://api.twitter.com/1.1/followers/list.json?\n//   screen_name={{{twitterSN}}}&\n//   cursor={{{twitterCursor}}}&\n//   count={{{twitterCount}}}\n\n// For more information visit get-followers-list:\n// https://developer.twitter.com/en/docs/accounts-and-users/follow-search-get-users/api-reference/get-followers-list\nmsg.payload = flow.get(\"bearer_token\")\n\n// Prepare the get follower request parameter\nmsg.twitterCursor = flow.get(\"twitterCursor\");\nmsg.twitterCount = flow.get(\"twitterResultCount\");\nmsg.twitterSN = flow.get(\"twitterSN\");\n\nmsg.nodereduser = flow.get(\"nodereduser\");\nmsg.noderedpassword = flow.get(\"noderedpassword\");\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 710,
        "y": 840,
        "wires": [
            [
                "66727eea.a6d578",
                "ca786e7e.45c1a8"
            ]
        ]
    },
    {
        "id": "58e13789.271eb8",
        "type": "debug",
        "z": "74eba602.6446d",
        "name": "json",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "x": 990,
        "y": 680,
        "wires": []
    },
    {
        "id": "9aed0ab6.f54e78",
        "type": "json",
        "z": "74eba602.6446d",
        "name": "",
        "property": "payload",
        "action": "obj",
        "pretty": false,
        "x": 410,
        "y": 680,
        "wires": [
            [
                "58e13789.271eb8",
                "943ee12f.415d5"
            ]
        ]
    },
    {
        "id": "e0c7616e.50858",
        "type": "function",
        "z": "74eba602.6446d",
        "name": "set_basic_auth",
        "func": "// Set basic auth\nflow.set(\"auth\", msg.payload);\nmsg.payload = flow.get(\"auth\");\n\n// Init parameters:\n// For more information visit get-followers-list:\n// https://developer.twitter.com/en/docs/accounts-and-users/follow-search-get-users/api-reference/get-followers-list\nflow.set(\"twitterCursor\", \"-1\");\nflow.set(\"twitterResultCount\", \"50\");\nflow.set(\"twitterSN\", \"YOUR DISPLAY NAME\");\n\nmsg.nodereduser = flow.get(\"nodereduser\");\nmsg.noderedpassword = flow.get(\"noderedpassword\");\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 660,
        "y": 620,
        "wires": [
            [
                "ab752410.03e078",
                "913c81cb.40976"
            ]
        ]
    },
    {
        "id": "90337eed.56771",
        "type": "json",
        "z": "74eba602.6446d",
        "name": "",
        "property": "payload",
        "action": "obj",
        "pretty": false,
        "x": 150,
        "y": 900,
        "wires": [
            [
                "d59fbe7a.ec413",
                "895075f6.079d"
            ]
        ]
    },
    {
        "id": "d59fbe7a.ec413",
        "type": "function",
        "z": "74eba602.6446d",
        "name": "build follower list",
        "func": "if (msg.payload.errors !== undefined ){\n    if (msg.payload.errors[0] !== undefined ){\n        // do nothing\n    }\n} else {\n    flow.set(\"twitterCursor\", msg.payload.next_cursor);\n\n    // load the exiting list from the flow variable to be saved later in the Cloudant database\n    var savedFollowers  = [];\n    savedFollowers = flow.get(\"savedFollowers\");\n    \n    var users = [];\n    // load the response data from the twitter request users\n    users = msg.payload.users;\n    \n\n    // build the customized follower list \n    var follower = {};\n    for (var i=0; i<50; i++){\n        \n       if( users[i] !== undefined) {\n         follower.username = users[i].name;\n         follower.screen_name = users[i].screen_name;\n         savedFollowers.push(follower);\n         follower = {};\n       } else {\n           i = 50;\n       }\n    }\n    \n    flow.set(\"savedFollowers\",savedFollowers);\n    followers = [];\n    \n}\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 450,
        "y": 900,
        "wires": [
            [
                "29fbdbce.737a74",
                "2ea164a8.e1f914"
            ]
        ]
    },
    {
        "id": "29fbdbce.737a74",
        "type": "switch",
        "z": "74eba602.6446d",
        "name": "",
        "property": "payload.next_cursor",
        "propertyType": "msg",
        "rules": [
            {
                "t": "gt",
                "v": "0",
                "vt": "num"
            },
            {
                "t": "eq",
                "v": "0",
                "vt": "num"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 410,
        "y": 1060,
        "wires": [
            [
                "9477bd6c.38f748"
            ],
            [
                "3e725a29.d4b39e"
            ]
        ]
    },
    {
        "id": "3e725a29.d4b39e",
        "type": "function",
        "z": "74eba602.6446d",
        "name": "end",
        "func": "msg.payload.message = \"end, no additional followers\";\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 610,
        "y": 1080,
        "wires": [
            [
                "acf23bc2.b325a8",
                "977e00aa.f6a558"
            ]
        ]
    },
    {
        "id": "9477bd6c.38f748",
        "type": "function",
        "z": "74eba602.6446d",
        "name": "move on",
        "func": "msg.payload.message = \"move on - next page\";\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 620,
        "y": 1040,
        "wires": [
            [
                "acf23bc2.b325a8",
                "a470e4ba.e78688"
            ]
        ]
    },
    {
        "id": "895075f6.079d",
        "type": "debug",
        "z": "74eba602.6446d",
        "name": "all data",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "x": 280,
        "y": 940,
        "wires": []
    },
    {
        "id": "2ea164a8.e1f914",
        "type": "debug",
        "z": "74eba602.6446d",
        "name": "cursor",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "x": 990,
        "y": 900,
        "wires": []
    },
    {
        "id": "943ee12f.415d5",
        "type": "function",
        "z": "74eba602.6446d",
        "name": "set_bearer_token",
        "func": "// Set token before loop\nflow.set(\"bearer_token\", \"Bearer \" + msg.payload.access_token);\nvar followers = [];\n// Init the follower list for the flow\nflow.set(\"savedFollowers\", followers)\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 190,
        "y": 840,
        "wires": [
            [
                "a470e4ba.e78688"
            ]
        ]
    },
    {
        "id": "977e00aa.f6a558",
        "type": "function",
        "z": "74eba602.6446d",
        "name": "build follower name list",
        "func": "var savedFollowers = [];\n    savedFollowers = flow.get(\"savedFollowers\");\n    \nvar data = {};\nvar twitterFollowers = {}; \n\nvar date = new Date();\n\ntwitterFollowers.date = date.getFullYear() + \".\" + \n            (date.getMonth() + 1) + \".\" + \n            date.getDate();\ntwitterFollowers.time = date.getTime(); \ntwitterFollowers.count = savedFollowers.length; \n            \ntwitterFollowers.followers = savedFollowers;\ndata.twitterFollowers = twitterFollowers;\n\n\nvar reset = [];\nflow.set(\"followers\", reset);\nflow.set(\"savedFollowers\", reset);\n\nmsg.payload = data;\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 670,
        "y": 1140,
        "wires": [
            [
                "9ab75289.0fc7d"
            ]
        ]
    },
    {
        "id": "9ab75289.0fc7d",
        "type": "debug",
        "z": "74eba602.6446d",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "x": 1010,
        "y": 1140,
        "wires": []
    },
    {
        "id": "dc8c7588.f072e8",
        "type": "comment",
        "z": "74eba602.6446d",
        "name": "Two step authentication",
        "info": "",
        "x": 120,
        "y": 500,
        "wires": []
    },
    {
        "id": "e7525e4e.605ba",
        "type": "comment",
        "z": "74eba602.6446d",
        "name": "Verify end of follower list",
        "info": "",
        "x": 210,
        "y": 1020,
        "wires": []
    },
    {
        "id": "56b42a38.cd9c64",
        "type": "function",
        "z": "74eba602.6446d",
        "name": "set user and secret",
        "func": "var user = \"YOUR KEY\";\nvar secret = \"YOUR SECRET\"\nvar nodereduser = \"admin\";\nvar noderedpassword = \"notreallysecure\"\n\nflow.set(\"nodereduser\", nodereduser);\nflow.set(\"noderedpassword\", noderedpassword);\n\nmsg.payload = user + \":\" + secret;\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 190,
        "y": 620,
        "wires": [
            [
                "a991a881.d91be8"
            ]
        ]
    },
    {
        "id": "c666ed0c.52b4c8",
        "type": "comment",
        "z": "74eba602.6446d",
        "name": "Request next page",
        "info": "",
        "x": 750,
        "y": 940,
        "wires": []
    },
    {
        "id": "9a8218da.0dd99",
        "type": "comment",
        "z": "74eba602.6446d",
        "name": "---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------",
        "info": "",
        "x": 660,
        "y": 360,
        "wires": []
    },
    {
        "id": "76fd18df.91c21",
        "type": "comment",
        "z": "74eba602.6446d",
        "name": "REST Endpoints",
        "info": "",
        "x": 100,
        "y": 40,
        "wires": []
    },
    {
        "id": "6e78c4cb.309a64",
        "type": "comment",
        "z": "74eba602.6446d",
        "name": "Automation to get followers using the REST endpoints",
        "info": "",
        "x": 220,
        "y": 400,
        "wires": []
    },
    {
        "id": "400c83fe.6b2004",
        "type": "comment",
        "z": "74eba602.6446d",
        "name": "Step 1: Authenticate with key and secret to get bearer token",
        "info": "",
        "x": 320,
        "y": 560,
        "wires": []
    },
    {
        "id": "2ec23f4.e830c4",
        "type": "comment",
        "z": "74eba602.6446d",
        "name": "Step 2: Authenticate with bearer token to get the follower list",
        "info": "",
        "x": 320,
        "y": 800,
        "wires": []
    },
    {
        "id": "1b538e36.0eda12",
        "type": "debug",
        "z": "74eba602.6446d",
        "name": "getToken HTTP input",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "x": 700,
        "y": 80,
        "wires": []
    },
    {
        "id": "3fa0044.d739e7c",
        "type": "switch",
        "z": "74eba602.6446d",
        "name": "",
        "property": "valid_request",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "1",
                "vt": "num"
            },
            {
                "t": "lt",
                "v": "1",
                "vt": "num"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 650,
        "y": 140,
        "wires": [
            [
                "40b26ed3.a8055"
            ],
            [
                "f66e9d25.093328"
            ]
        ]
    },
    {
        "id": "f66e9d25.093328",
        "type": "function",
        "z": "74eba602.6446d",
        "name": "not a valid user",
        "func": "msg.payload = { \"error\": \"unknown user\"};\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 840,
        "y": 180,
        "wires": [
            [
                "524852f0.ac63ac"
            ]
        ]
    },
    {
        "id": "863f0ed1.9952e",
        "type": "switch",
        "z": "74eba602.6446d",
        "name": "",
        "property": "valid_request",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "1",
                "vt": "num"
            },
            {
                "t": "lt",
                "v": "1",
                "vt": "num"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 650,
        "y": 280,
        "wires": [
            [
                "353a2edf.70e42a"
            ],
            [
                "b3d20da4.aeed2"
            ]
        ]
    },
    {
        "id": "b3d20da4.aeed2",
        "type": "function",
        "z": "74eba602.6446d",
        "name": "not a valid user",
        "func": "msg.payload = { \"error\": \"unknown user\"};\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 840,
        "y": 300,
        "wires": [
            [
                "8ecb7347.fe94c8"
            ]
        ]
    }
]